-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS prava
(
    id serial,
    nazov VARCHAR(256) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS typy_chyb
(
    id serial,
    popis VARCHAR(256),
    id_kym_sposobene integer NOT NULL,
    id_druh_chyby integer NOT NULL,
    id_miesto_na_linke integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS pouzivatelia
(
    id serial,
    meno VARCHAR(256) NOT NULL,
    priezvisko VARCHAR(256)NOT NULL,
    e-mail VARCHAR(256) NOT NULL,
    heslo VARCHAR(256) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS typy_revizii
(
    id serial,
    nazov_revizie VARCHAR(256) NOT NULL,
    datum_poslednej_revizie date NOT NULL,
    exspiracia interval NOT NULL,
    datum_nadchadzajúcej_revizie date NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS ma_pouzivatel_pravo
(
    id serial,
    id_pouzivatela integer NOT NULL,
    id_prava integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS chyby
(
    id serial,
    id_miesto_na_linke integer NOT NULL,
    id_druh_chyby integer NOT NULL,
    cas_vzniku time without time zone NOT NULL,
    datum_vzniku date NOT NULL,
    id_pouzivatela integer NOT NULL,
    schvalena boolean NOT NULL,
    vyriesena boolean NOT NULL,
    cas_vyriesenia time without time zone NOT NULL,
    datum_vyriesenia date NOT NULL,
    id_sposobena_kym integer NOT NULL,
    id_typ_chyby integer,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS druh_chyby
(
    id serial,
    nazov VARCHAR(256) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS sposobena_kym
(
    id serial,
    kym VARCHAR(256) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS miesto_na_linke
(
    id serial,
    miesto VARCHAR(256) NOT NULL,
    PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS typy_chyb
    ADD FOREIGN KEY (id_kym_sposobene)
    REFERENCES sposobena_kym(id)
    ON UPDATE CASCADE
    ON DELETE CASCADE ;


ALTER TABLE IF EXISTS typy_chyb
    ADD FOREIGN KEY (it_druh_chyby)
    REFERENCES druh_chyby(id)
    ON UPDATE CASCADE
    ON DELETE CASCADE ;


ALTER TABLE IF EXISTS typy_chyb
    ADD FOREIGN KEY (id_miesto_na_linke)
    REFERENCES miesto_na_linke(id)
    ON UPDATE CASCADE
    ON DELETE CASCADE ;

ALTER TABLE IF EXISTS ma_pouzivatel_právo
    ADD FOREIGN KEY id_pouzivatela
    REFERENCES pouzivatelia(id)
    ON UPDATE CASCADE
    ON DELETE CASCADE ;


ALTER TABLE IF EXISTS ma_pouzivatel_pravo
    ADD FOREIGN KEY id_prava
    REFERENCES prava(id)
    ON UPDATE CASCADE
    ON DELETE CASCADE ;


ALTER TABLE IF EXISTS chyby
    ADD FOREIGN KEY id_pouzivatela
    REFERENCES pouzivatelia(id)
    ON UPDATE CASCADE
    ON DELETE CASCADE ;


ALTER TABLE IF EXISTS chyby
    ADD FOREIGN KEY (id_typ_chyby)
    REFERENCES typy_chýb (id)
    ON UPDATE CASCADE
    ON DELETE CASCADE ;


ALTER TABLE IF EXISTS chyby
    ADD FOREIGN KEY (id_druh_chyby)
    REFERENCES druh_chyby (id)
    ON UPDATE CASCADE
    ON DELETE CASCADE ;


ALTER TABLE IF EXISTS chyby
    ADD FOREIGN KEY id_sposobena_kym
    REFERENCES sposobena_kym (id)
    ON UPDATE CASCADE
    ON DELETE CASCADE


ALTER TABLE IF EXISTS chyby
    ADD FOREIGN KEY (id_miesto_na_linke)
    REFERENCES miesto_na_linke (id)
    ON UPDATE CASCADE
    ON DELETE CASCADE

END;